{
	"info": {
		"_postman_id": "71046fc2-f44a-4af2-a2df-0427789304c7",
		"name": "Assignment2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "15107572"
	},
	"item": [
		{
			"name": "Get All Users - Empty List",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const response = pm.response.json();\r",
							"console.log(response);\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Expect an empty list of users\", function () {\r",
							"  var jsonData = pm.response.json();\r",
							"  pm.expect(jsonData).to.eql([]);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{API_URL}}/users",
					"host": [
						"{{API_URL}}"
					],
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get All Projects - Empty List",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const response = pm.response.json();\r",
							"console.log(response);\r",
							"\r",
							"pm.test(\"Status code is 404\", function () {\r",
							"  pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Expect a response body saying that User was not found\", function () {\r",
							"  var jsonData = pm.response.json();\r",
							"\r",
							"  const expectedValue = {\r",
							"    \"message\": \"Usuário não encontrado\",\r",
							"    \"error\": \"Not Found\",\r",
							"    \"statusCode\": 404\r",
							"  };\r",
							"\r",
							"  pm.expect(jsonData).to.eql(expectedValue);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{API_URL}}/projects",
					"host": [
						"{{API_URL}}"
					],
					"path": [
						"projects"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get All Tasks - Empty List",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const response = pm.response.json();\r",
							"console.log(response);\r",
							"\r",
							"pm.test(\"Status code is 404\", function () {\r",
							"  pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Expect a response body saying that User was not found\", function () {\r",
							"  var jsonData = pm.response.json();\r",
							"\r",
							"  const expectedValue = {\r",
							"    \"message\": \"Usuário não encontrado\",\r",
							"    \"error\": \"Not Found\",\r",
							"    \"statusCode\": 404\r",
							"  };\r",
							"\r",
							"  pm.expect(jsonData).to.eql(expectedValue);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{API_URL}}/tasks",
					"host": [
						"{{API_URL}}"
					],
					"path": [
						"tasks"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create User",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"firstName\": \"Dickson\",\n    \"lastName\": \"Souza\",\n    \"email\": \"36424026+disouzam@users.noreply.github.com\",\n    \"password\": \"123\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{API_URL}}/users",
					"host": [
						"{{API_URL}}"
					],
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get User by Id",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{API_URL}}/users/1",
					"host": [
						"{{API_URL}}"
					],
					"path": [
						"users",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Project",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Lista de compras do SEU NOME\",\n    \"description\": \"lista basica\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{API_URL}}/projects",
					"host": [
						"{{API_URL}}"
					],
					"path": [
						"projects"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Project",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{API_URL}}/projects/1",
					"host": [
						"{{API_URL}}"
					],
					"path": [
						"projects",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Task",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOjIsInVzZXJuYW1lIjoiZW1haWxAZW1haWwyLmNvbSIsImlhdCI6MTcyNTMyMzM5NiwiZXhwIjoxNzI1MzI2OTk2fQ.jseJEB1mtBTjHVqBRral7Noqcd7jILCvw5Mg_W5xr0I",
						"type": "text",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Comprar curso de nest para SEU NOME\",\n    \"projectId\": 1,\n    \"status\": \"pending\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{API_URL}}/tasks",
					"host": [
						"{{API_URL}}"
					],
					"path": [
						"tasks"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Task",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{API_URL}}/tasks/1",
					"host": [
						"{{API_URL}}"
					],
					"path": [
						"tasks",
						"1"
					]
				}
			},
			"response": []
		}
	]
}